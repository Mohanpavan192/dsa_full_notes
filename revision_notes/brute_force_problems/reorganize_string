here we pop the most frequent element first and store it in prev element and add te prv element to pq only if it's count is >0, but if there  is only onle element left, after adding one instance of that element, pq would become emepty and and the loop would exit
that's why we check size at end

https://leetcode.com/problems/reorganize-string/

class Solution {
public:
    string reorganizeString(string s) {
        vector<int> freq(26, 0);
        for (char c : s) freq[c - 'a']++;
        
        priority_queue<pair<int, char>> pq;
        for (int i = 0; i < 26; i++) {
            if (freq[i] > 0)
                pq.push({freq[i], 'a' + i});
        }
        
       string ans;
       pair<int,char>prev={0,'#'};
       while(!pq.empty())
       {
        auto [count ,ch]=pq.top();pq.pop();
        ans+=ch;
        count--;
        if(prev.first>0)
        pq.push(prev);
        prev={count,ch};
       }
       if(ans.size()==s.size())
       return ans;
       return "";
    }
};
