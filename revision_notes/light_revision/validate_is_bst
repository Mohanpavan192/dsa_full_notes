do again
  https://leetcode.com/problems/validate-binary-search-tree/submissions/1815180089/



  /**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 struct x{
    bool is_bst=true;
    long long min_val=LLONG_MAX;
    
    long long  max_val=LLONG_MIN;
    
 };
class Solution {
public:
x help(TreeNode* root)
{
    if(!root)
    {
        x a;
        return a;
    }
    x left=help(root->left);
    x right=help(root->right);
    x c;
    if(left.is_bst&&right.is_bst&&left.max_val<root->val&&right.min_val>root->val)
    {
        c.min_val=min((long long)root->val,left.min_val);
        c.max_val=max((long long)root->val,right.max_val);
    }
    else
    c.is_bst=false;
    return c;
}
    bool isValidBST(TreeNode* root) {
        return help(root).is_bst;
    }
};
